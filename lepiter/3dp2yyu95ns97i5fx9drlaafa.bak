{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:40:46.767-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:40:54.801-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "sLtXuyziDQC8BfjXC2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Brick is a high level widget library build on top of Bloc. Brick follow the **MVVM** pattern (Model-view-ViewModel).  Brick follows a component based ui design, which means each widget is independent and they do not inherit any style from the parents. Component based UI appears to be a de-facto standard pattern when it comes to creating and managing large scale UI applications. It means that by design there is no way to apply a global stylesheet. Each widget keeps its style to itself. \r\n[reference](https://discord.com/channels/223421264751099906/375240886319316994/1293518433220296734)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:42:33.97-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:47:34.616-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "aIW7wSziDQC8SgLvC2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Brick widget define the public API for the widget. Brick is built on top of Bloc elements.  If you feel you need to create a Bloc element, ask first, you probably don't."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:42:36.504-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:43:45.007-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2C/iwSziDQC8UIuzC2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "There are several architectural features of Brick that facilitate flexibility and reuse:\r\n- **Stencils** (subclass of BrStencil) are used to create widgets when lazy creation is required, or when the widget to be created depends on the data being displayed.\r\n- **Aptitude**  (previously Looks - provide the ability to modify the element to which they are attached.  A typical example is the look of a Button, whether it has a border or not, a label or not, an icon or not, etc.  Looks should only be created when the underlying widget is used in many places, e.g. buttons, and should not affect the API of the widget. Aptitude affect and endow an element with looks and behavior. They can be dynamically added and removed. They can be composed. In short, a powerful mechanism for dynamic scenes. Aptitude provide graphical definition to your element, which at first is invisible for **appearance** and **interaction**\r\n- **View Models** are used to maintain the state of a Brick widget, e.g. pressed, focused, hovered, and, like Looks, can be composed by adding multiple models together.  Like Aptitude, models also receive events. widget Model  helps following **MVVM** design patterm"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:41:45.227-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:41:46.26-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "EMPTviziDQC8OWcwC2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Aptitude and WidgetModel manage to communicate with each other through event, which are subclasses of {{gtClass:BrRequest}} and {{gtClass:BrChangeEvent}} as demonstrated in {{gtClass:BrTextLabelAptitude}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:44:05.763-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:44:05.763-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0Cs0xyziDQC9n/tOC2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Brick-Glamorous will give aptitude and icons used by GToolkit. **BrGlamorousVectorIcons** + package Brick-Glamorous\r\n\r\n**BrGlamorousComponents** provide example of widget used by GToolkit, it will show which aptitude is used with GToolkit components"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:46:19.889-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:46:21.321-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gMUyzyziDQC+QCr5C2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Both {{gtClass:BrAptitude}} and {{gtClass:BrWidgetModel}} inherit from {{gtClass:BrActor}}. They are used to provide the behavior and style interface to the widget. A widget **must** have a model before it can be associated to an aptitude, as aptitude can react to event and state defined byt the widget model"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:07:24.583-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:44:54.445-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cNQARCziDQC4zd3cC2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can notice that at first, the button is a bare new {{gtClass:BlElement}}, on which we add a {{gtMethod:BlElement>>viewModel:}} and {{gtMethod:BlElement>>aptitude:}} as shown in:  {{gtExample:BrButtonLabelAptitudeExamples>>buttonWithModelAndLookWithConstraints}}\""
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T12:49:04.809-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T12:49:05.873-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "QFRMVSriDQCu3/WxC2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Add two main abstraction to {{gtClass:BlElement}}, both subclass of {{gtClass:BrActor}} to create high-level widget. It strongly event based, with custom event as subclass of {{gtClass:BrRequest}} and {{gtClass:BrChangeEvent}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T12:50:07.192-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T12:50:08.161-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wDsEWSriDQCvHHzmC2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "you  can {{gtMethod:BlElement>>addAptitude:}} and {{gtMethod:BlElement>>addViewModel:}} and of course {{gtMethod:BlElement>>removeAptitude:}} and update {{gtMethod:BlElement>>viewModel:}}. Aptitude can be composed (think CSS on steroïd), to define precisely the appearance and behaviour of your widget when you interact with it through event"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T12:55:50.503-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T12:55:56.295-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cLp6bSriDQCxlKKCC2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Example details for BrButton"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T12:55:53.276-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T12:56:08.003-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "eAqlbSriDQCxnatcC2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Let look in detail at {{gtClass:BrButton}}. In the {{gtMethod:BrButton>>initialize}}, it reference its widget model. Note that you can have more than one model per widget. In the method listed in `API-Widget`  protocols, state is managed through the  dedicated widget model, like {{gtMethod:BrButton>>action:}} or {{gtMethod:BrButton>>icon:}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T12:56:09.433-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T12:56:28.884-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "qJebbiriDQCxtth3C2HBGA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "To specify the appearance of your widget, you must declare which aptitude it will use, like in {{gtExample:BrGlamorousComponentsButtons>>withLabel}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-06-21T13:12:47.519131-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-31T15:47:43.131-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "s6n4hKuBDQC6ggiAC6EZOQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "\r\n\n#Common widget:\n- BrAccordion (BlElement)\n- BrBadge (BlElement)\n- BrBreadcrumb (BlElement)\n- BrButton (BlElement)\n- BrCard (BlElement)\n- BrCheckbox (BlElement)\n- BrDropdown (Object)\n- BrEditor (BrEditorElement)\n- BrEditableLabel (BrEditor)\n- BrEditorWithToolbar (BrVerticalPane)\n- BrEntailment (BlElement)\n- BrFileBrowser (BrVerticalPane)\n- BrFileSelector (BrVerticalPane)\n- BrLabel(BlElement)\n- BrPager (BlElement) with Stencil.\n- BrPopup (BlElement) with Look and Stencil.\n- BrProgress (BlElement)\n- BrResizer (BlElement)\n- BrScrollPane (BlElement)\n- BrScrollbar (BlElement)\n- BrSwitch\n- BrTab and BrTabGroup (BlElement)\n- BrTagger (BlElement)\n- BrToggle and BrToggleGroup (BlElement)\n- BrToolbar (BlElement)\n- BrTree and subclasses (BlElement).\n- BrTriangle (BlElement) -> display a triangle, as used to open or close block of text\n\nList widget with Stencil\n- BrColumnedList\n- BrFlowList\n- BrGridList\n- BrSimpleList"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-06-18T18:19:45.713222-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-06-18T18:19:54.580222-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Brick - high level widget"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "46e44175-7381-0d00-ba9a-668c0ba11939"
	}
}