{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:21.379-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:21.379-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0OMCT+/eDQCjlqfmAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Transform BlElement position. aBuilder being `BlTransformationBuilder`\r\n\r\nTransform animation can be absolute or relative. (consistent with absolute/relative vector path builder)\r\n\r\n- relative builds on existing element transformation\r\n- absolute defines new element independent transformation\r\n  \r\n```smalltalk\r\nBlTransformAnimation new\r\n\ttarget: el;\r\n\ttransformDo: [ :aBuilder |\r\n\t\taBuilder translateBy:\r\n\t\t\ti * 15 @ (500 - (30 * (i / 25) ceiling)) ];\r\n\tdelay: 80 milliSeconds * i;\r\n\tduration: 5000 milliSeconds;\r\n\teasing: BlEasing bounceOut.\r\n```\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:25.376-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:25.376-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GOE/T+/eDQCjncr8Az8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#### Transform animation rotation pitfall\r\n\r\nA transform rotation has some peculiarities its worth highlighting.\r\n\r\nLet's take the initial step-up to show how it works:\r\n\r\n```smalltalk\r\n| elt frame container anim |\r\nelt := BlElement new    background: (Color red alpha: 0.5);    position: 100 asPoint;    size: 100 asPoint.\r\nframe := BlElement new background: Color yellow; position: 100 asPoint; size: 100 asPoint.\r\ncontainer := BlElement new background: Color lightGreen; size: 500 asPoint; addChildren: { frame. elt }.\r\n```\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:26.946-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:26.946-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6NVXT+/eDQCjpF9KAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Transformation are affine transformation. For more detail, you can search on the internet,\r\nthere are countless references to it. To simplify it, I'll say we apply a\r\ntransformation matrix (*BlMatrix2D*) to all point of our figure path, each point\r\nrepresented as BlVector. \r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:29.411-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:29.411-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0HJ9T+/eDQCjqw9iAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You have 3 type of tranformation available in Bloc:\r\n- *BlElementLocalTransformation*: This transfomation combine an affine transformation (*BlAffineTransformation* subclasses), with a point of origin (*BlAffineTransformationOrigin* subclasses). By default, origin is the center of your element, *BlAffineTransformationCenterOrigin*.\r\n- *BlElementAbsoluteTransformation*: This transformation apply a transformation matrix to your shape, without point of origin. Its  result is similar to *BlElementLocalTransformation*, with origin set to *BlAffineTransformationTopLeftOrigin*\r\n- *BlElementCompositeTransformation* which are combination of *BlElementLocalTransformation* and/or *BlElementAbsoluteTransformation*"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:31.098-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:31.098-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "kDSXT+/eDQCjsvAxAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "When you're doing a transformation using transformDo:, you'll, by default, use\r\n*BlElementLocalTransformation*. The origin will be set to *BlAffineTransformationCenterOrigin*.\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:32.37-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:32.37-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "aJmqT+/eDQCjuf88Az8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "For an element rotated to 45 degree, it'll look like:\r\n\r\n```smalltalk\r\nelt transformation: (BlElementLocalTransformation newWith: ((BlRotationTransformation new angle: 45) origin: (BlAffineTransformationCenterOrigin defaultInstance ) )).\r\n```\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:33.702-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:33.702-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iOy+T+/eDQCjwLwoAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "However, *BlTransformAnimation* will use *BlElementAbsoluteTransformation* to\r\nmanage the transformation matrix. This transformation works by updating its\r\ntrasformation matrix, from IdentityMatrix, to target matrix, through\r\ninterpolation computed at each animation step (fromMatrix interpolate: aNumber to: toMatrix)\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:34.762-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:34.762-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KBnPT+/eDQCjx5LMAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This transformation doesn't use an origin point. Instead, It'll apply a translation,\r\nso that your shape still look like it's in the element bound. This translation\r\nis added to your transformation definition (boundingRectangle:)\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:35.975-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:35.975-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cJvhT+/eDQCjzt1MAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "So, for the sample 90 degree rotation used as an example, the tranformation will\r\nlook like below in mid-way (45 degrees rotation, and translation of 50px on 100px)\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:37.199-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:37.199-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "sEj0T+/eDQCj1Wy8Az8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "```smalltalk\r\nelt transformation: (BlElementAbsoluteTransformation matrix: (BlMatrix2D new x: 50 ;y: 0; shx: 45 degreesToRadians sin * -1 ; shy: 45 degreesToRadians sin ; sx: 45 degreesToRadians cos; sy: 45 degreesToRadians cos )   ).\r\n```\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:38.043-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:38.043-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "kCkBUO/eDQCj3CYqAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can notice that for a similar rotation, the position of orange square is not the same.\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:39.218-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:39.218-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "UBsTUO/eDQCj485hAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now, why do we need to use a *BlElementAbsoluteTransformation* for *BlTransformAnimation* ?\r\nMy assumption is that this animation must managed all 3 basic transformation: rotation, translation and scale.\r\nEach tranformation will happen gradually during animation, with new position computed at each step.\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:07:46.238-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T10:08:39.221-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "MLLqTO/eDQCjYUweAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can specify a default generic value of 0 for rotation and translation, so \r\nif you don't specifiy it, it won't affect your element (At each step, 0*StepValue = 0).\r\nHowever, for scaling, if you don't specify it, you need to keep it's value at 1.\r\nMatrix interpolation is one possibility to manage this.\r\n\r\nIf you want to have an exact rotation animation, it's better to define your own animation to manage only rotation, \r\nlike I did previously in this chapter.\r\n\r\nLast: One point about the relative/absolute naming\r\n\r\n- *BlTransformAnimation new relative* is a **cumulative** transformation, meaning you can apply it several times and the effects will add up. So it's relative to the current transformation (it transforms by this *delta*)\r\n- *BlTransformAnimation new absolute* converges to the final transformation you asked for. If you apply it again, it will no nothing because the element is already there (it transforms to *that* destination)\r\n\r\nIt's confusing because relative suggests it could be in coordinates relative to the element's origin, or to some coordinate space other than the world/screen."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-09-20T10:08:08.477-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-09-20T10:08:08.477-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Transform animation"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "5858ea4c-efde-0d00-a360-ebc6033f2782"
	}
}