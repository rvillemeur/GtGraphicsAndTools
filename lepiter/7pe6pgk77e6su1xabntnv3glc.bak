{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:26.229-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:26.229-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ILHxse7eDQCQSIiiAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Elements can be added in the element tree of an element with the `addChild:` method. You can add multiple elements at once with `addChildren:`. You can of course remove sub-element with `removeChild:` and `removeChildren:` methods."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:28.463-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:28.463-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "sMcTsu7eDQCQT86mAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Browse `BlElement` to find all the available methods to manage the addition and removal of the elements composing your element."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:36.449-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:27:03.715-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "AKONsu7eDQCQVihwAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Layouts constitute a fundamental aspect of *Bloc*. Rather than constructing your entire widget within a single *drawing* method, it advocates for the creation of small elements with distinct geometries and visual attributes, which are then integrated using diverse layout strategies. The layout property determines the visual arrangement of the element and its descendants, specifying their positions and sizes within the parent container. Moreover, it may influence the\r\ndimensions of the parent element itself.When defining layout, two parts must be combined to play together: *parent* and *children* elements.\r\n- Parents define which layout strategy to apply to their children.\r\n- Children specify which constraints they will follow, which could impact their position and size.\r\nLayouts are defined by their *type* and their *constraints*. Types are usually defined at the parent level with the `layout` method, while you can specify constraints to your child element using the `constraintsDo:` message, which supports a set of attributes that define the visual properties of the layout. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:51.466-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:55.91-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KMdys+7eDQCQebHSAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "A small set of constraints, like padding, margin or minimal and maximum dimensions, are common among all the layouts. Constraints allow you to clearly\r\ndefine the size and the position of your element within its parent."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:53.954-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:53.954-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ALqYs+7eDQCQgLGqAz8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "When you change the position or the size of an element, a `requestLayout` is sent but the effect on the elementâ€™s bounds is actually visible only after the layout is computed. In Bloc, the layout is computed from a dedicated space Phase, applied on each pulse. Have a look at `BlSpaceFrame` and `BlSpaceFramePhase` and its subclasses."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:12.585-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-20T09:24:53.956-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KIQhse7eDQCQMTh2Az8ngg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "To ease this kind of script one can use `whenLayoutedDoOnce:` which arms a one shot event handler that reacts to the `BlElementLayoutComputedEvent` event."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-09-20T09:24:21.17-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-09-20T09:25:59.061-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "BlElement Parent children"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "c04121b1-eede-0d00-9030-14bf033f2782"
	}
}