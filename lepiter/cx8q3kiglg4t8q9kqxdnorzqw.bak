{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:37:48.795-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:37:57.669-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "eFxmy9/eDQCpJW/MD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "**Bloc** distinguishes itself by prioritizing object composition over inheritance as its core design principle. This means that instead of relying heavily on complex inheritance hierarchies, **Bloc** encourages building user interface components by combining and customizing basic building blocks."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:38:06.85-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:38:16.405-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0Nt5zN/eDQCpS7knD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Every visual element within **Bloc** stems from the fundamental class `BlElement`. This versatile class serves as the foundation upon which you can construct more intricate components. By directly customizing and combining `BlElement` instances, you gain granular control over the appearance and behavior of your UI elements."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:38:30.455-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:39:01.438-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2Arizd/eDQCpfSzJD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "**Bloc** introduces two key concepts for managing the visual environment: `BlUniverse` and `BlSpace`. Imagine `BlUniverse` as a container housing a collection of individual `BlSpace` instances. Each `BlSpace` represents a distinct tab in GToolkit GUI. If you have multiple windows open simultaneously, they'll be neatly organized within the `BlUniverse`, providing a clear overview of your active spaces."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:39:22.998-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:39:37.302-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "IMED0d/eDQCqLAWFD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Creating Your First Bloc Component"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:39:40.233-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:39:56.416-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "QMEK0t/eDQCqSnCDD9l5vg=="
				},
				"code" : "BlElement new\r\n\tgeometry: BlRectangleGeometry  new;\r\n\tsize: 200 @ 100;\r\n\tbackground: Color blue"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:40:10.939-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:40:37.905-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "kErf09/eDQCqe3DcD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "1. **Start with a blank canvas:** Begin by creating a new `BlElement`. This serves\r\nas the foundation for your user interface element, initially appearing\r\ninvisible.\r\n2. **Define its shape:** In Bloc, the element's visual representation is\r\ndetermined by its geometry. In this example, we'll use a simple rectangle, but\r\nmore complex shapes are also possible (explored in further detail later).\r\n3. **Set its dimensions and appearance:** Specify the element's size and color\r\nto customize its visual characteristics.\r\n4. **Bring it to life:** Finally, open the element by inspecting it."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:41:27.979-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:41:35.91-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ENR22N/eDQCrjp8HD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Geometry of BlElement"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:41:54.691-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:41:54.691-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6GcO2t/eDQCrnxAwD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "In Bloc, the visual form and boundaries of your UI elements are determined by their geometries. Each element can only possess a single geometry, essentially acting as a blueprint for its shape and size. You can visualize an element as a specific geometry encapsulated within an invisible rectangular container, representing its overall *bounds*."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:41:56.163-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:41:56.163-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6N0k2t/eDQCrpnjJD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Bloc provides a diverse range of pre-defined geometry shapes accessible through `BlElementGeometry allSubclasses`. This comprehensive library empowers you to\r\nconstruct elements of varying complexities, from basic rectangles and circles to more intricate forms."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:40:47.965-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:41:56.165-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "YEMU1t/eDQCrKlIoD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Bloc excels in facilitating the creation of custom components with advanced layout possibilities. Imagine building complex layouts by strategically arranging various elements, each defined by its unique geometry, to form a cohesive whole."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:41:57.669-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:42:13.533-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "oNw72t/eDQCrrLNUD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "While the Skia canvas provides a foundational set of building drawing primitives, Bloc offers a richer library of pre-defined shapes and the flexibility to construct even more intricate geometries."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:42:26.865-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:42:28.33-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gFv529/eDQCr4jTnD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "* **Annulus**: `BlAnnulusSectorGeometry new startAngle: 225; endAngle: 360;   innerRadius: 0.3; outerRadius: 0.9);`\r\n* **Bezier**: `BlBezierCurveGeometry controlPoints: { 5@0. 25@80. 75@30. 95@100 }`\r\n* **Circle**: `BlCircleGeometry new matchExtent: 100 @ 50`\r\n* **Ellipse**: `BlEllipseGeometry new matchExtent: 100 @ 50)`\r\n* **Line**: `BlLineGeometry from: 10@10 to: 90@90`\r\n* **Polygon** : `BlPolygonGeometry vertices: {(10 @ 10). (10 @ 90). (50 @ 50). (90 @ 90). (90 @ 10)}`\r\n* **Polyline**: `BlPolylineGeometry vertices: {(10 @ 10). (10 @ 90). (50 @ 50).(90 @ 90). (90 @ 10) }`\r\n* **Rectangle** : `BlRectangleGeometry  new`\r\n* **Rounded rectangle**: `BlRoundedRectangleGeometry cornerRadius: 20`\r\n* **Square**: `BlSquareGeometry new matchExtent: 70 @ 70`\r\n* **Triangle**: `BlTriangleGeometry new matchExtent: 50 @ 100; beLeft`"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:43:46.332-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:43:50.531-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "kOm14N/eDQCsNamHD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Element border\r\n\r\nThe geometry is like an invisible line on which your border is painted. The\r\npainting is a subclass of `BlPaint`, and one of the three:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:43:34.419-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:43:46.334-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "OCoA4N/eDQCsK1l8D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "- solid color\r\n- linear gradient color\r\n- radial gradient color"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:03.964-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:06.127-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ePjC4d/eDQCsTiXmD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Your border opacity can be specified as well: `opacity: 0.5;`"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:08.822-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:08.822-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "8BwN4t/eDQCsWpmPD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "By default, your border will be a full line, but it can also be dashed, with\r\n**dash array** and **dash offset**. Dash arrays define the number of element, and\r\ndash offset, the space between elements."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:43:59.631-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:08.826-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "yNaA4d/eDQCsRFKUD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You also have a pre-defined option, available in a single call:\r\n\r\n- **dashed**\r\n- **dashed small**"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:31.661-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:31.661-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "4Jdp49/eDQCsaql2D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "If the path is not closed, The style extent of your border can be defined with\r\n\r\n- **cap square**\r\n- **cap round**\r\n- **cap butt**"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:33.351-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:39.908-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cGGD49/eDQCscfEmD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Last, when the lines of your border cross each other, you can define the style of the join "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:11.287-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:33.353-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "8LUy4t/eDQCsYC2dD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "- **round join**\r\n- **bevel join**\r\n- **mitter join**"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:49.584-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:44:55.22-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "mBN75N/eDQCshj8lD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You have two options to define your border:\r\n\r\n* short call: `element border: (BlBorder paint: Color orange width: 5)`\r\n* with a builder:`element border: (BlBorder builder dashed; paint: Color red; width: 3; build)`\r\n\r\nThe first one is very helpful for solid line definition. The builder lets use customize all the details of your border."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:13.594-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:13.594-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "qHDp5d/eDQCso7YBD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Element bounds and outskirts"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:15.092-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:15.092-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "OEwA5t/eDQCsqop/D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Let's look at the different possible bounds of your element."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:16.554-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:28.715-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KJsW5t/eDQCssaW5D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "**Layout bounds** can be defined explicitly using `size:` method or dynamically Layout bounds are considered by layout algorithms to define mutual locations for all considered elements. You'll know more about layout later."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:17.836-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:30.821-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "+Coq5t/eDQCsuOi0D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "**Geometry bounds** area is defined by minimum and maximum values of polygon vertices. This does not take in account the border width"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:09.652-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:24.791-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "OEqt5d/eDQCsmdzPD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The geometry is like an invisible line on which your border is represented. The border drawing can happen outside (adding its border size to the size of your element), centered, or inside the geometry of the element. The final size (geometry + border width) will define the **bounds** of your element."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:43:47.728-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:45:54.955-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "sDbL4N/eDQCsO7/SD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "If we specify outskirts inside, visual bound and geometry bounds will be the same. But if the outskirts is outside, then visual bounds are larger than geometry bounds to take border width into its calculation."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:46:19.967-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:46:19.967-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "SDLe6d/eDQCtNnXkD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Element background"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:46:22.035-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:46:22.035-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "aMD96d/eDQCtPQHXD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "quick set-up: `background: (Color red alpha: 0.8);`"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:46:28.346-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:46:28.346-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "qBBe6t/eDQCtS8UPD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "using linear gradient\r\n\r\n```smalltalk\r\nbackground: ((BlLinearGradientPaint direction: 1 @ 1) from: Color red to: Color blue).\r\n```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:46:15.12-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:46:28.349-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "mECU6d/eDQCtLL42D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "using radial gradient\r\n\r\n```smalltalk\r\nbackground: (BlRadialGradientPaint new\r\nstops: { 0 -> Color blue. 1 -> Color red };\r\ncenter: largeExtent // 2;\r\nradius: largeExtent min;\r\nyourself);\r\n```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:46:30.622-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:46:52.39-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "SMuA6t/eDQCtUSN9D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Using dedicated `BlPaintBackground` object.\r\n\r\n```smalltalk\r\nBlElement new \r\n\tbackground: ((BlPaintBackground paint: Color red  asBlPaint) opacity: 0.75; yourself);\r\n\topenInSpace\r\n```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:47:10.063-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:47:10.063-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "yJna7N/eDQCtaOdqD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Element effect"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:47:20.404-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:47:20.404-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "OGh47d/eDQCtdE2dD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can get the list of all the effects available by executing: `BlElementEffect  allSubclasses`"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:47:05.986-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:47:20.406-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6Gec7N/eDQCtXm4CD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#### Simple shadow. \r\n\r\n```origin=BlocExamples>>shadow\r\nBlElement new\r\n\tsize: 200 @ 100;\r\n\tgeometry: (BlRoundedRectangleGeometry cornerRadius: 2);\r\n\tbackground: (Color red alpha: 0.2);\r\n\tborder: (BlBorder paint: Color yellow width: 1);\r\n\toutskirts: BlOutskirts centered;\r\n\teffect:\r\n\t    (BlSimpleShadowEffect color: Color orange offset: -10 @ -20)\r\n```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:47:31.839-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:47:32.966-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GOgm7t/eDQCteoN+D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Try the following variation.\r\n\r\n```\r\neffect: (BlSimpleShadowEffect\r\n\tcolor: (Color orange alpha: shadowAlpha)\r\n\toffset: shadowOffset);\r\n```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:47:46.097-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:47:58.567-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gHMA79/eDQCtgwhoD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#### Gaussian shadow.\r\nThe following produces\r\n\r\n```smalltalk\r\nBlElement new\r\n\tsize: 300 @ 150;\r\n\tgeometry: (BlRoundedRectangleGeometry cornerRadius: 2);\r\n\tbackground: (Color blue alpha: 0.5);\r\n\tborder: (BlBorder paint: Color red width: 10);\r\n\teffect: (BlGaussianShadowEffect color: Color yellow offset: 10@20 width: 5)\r\n```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:15.418-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:15.418-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "qNq/8N/eDQCtoHSqD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Element opacity"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:11.539-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:15.421-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "UKqE8N/eDQCtlsQgD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The element opacity is a value between 0 and 1, 0 meaning completely transparent.\r\nYou can apply opacity to a background, a border, or to your whole element."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:34.662-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:34.662-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iH7l8d/eDQCtrohgD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:48.503-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:48.503-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2LS48t/eDQCtvBUiD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Element transformation"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:51.295-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:51.295-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "MEvj8t/eDQCtwzTcD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can apply transformations to a `BlElement`:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:53.522-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:53.522-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gEIF89/eDQCtysPTD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "- rotation\r\n- translation\r\n- scaling\r\n- reflection\r\n- etc..."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:54.883-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:54.883-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0Aoa89/eDQCt0Ul3D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Transformation are affine transformation. For more detail, you can search on the internet, there are countless references to it. To simplify it, I'll say we apply  a transformation matrix (*BlMatrix2D*) to all point of our figure path, each point represented as *BlVector*. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:58.059-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:58.059-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "EIFK89/eDQCt2OAlD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You have 3 type of tranformation available in Bloc:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:59.406-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:59.406-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "yA5f89/eDQCt3/BMD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "- **BlElementLocalTransformation**: This transformation combine an affine transformation (*BlAffineTransformation* subclasses), with a point of origin (*BlAffineTransformationOrigin* subclasses). By default, origin is the center of your element, BlAffineTransformationCenterOrigin."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:00.489-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:00.489-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "QJVv89/eDQCt5pK2D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "- **BlElementAbsoluteTransformation**: This transformation apply a transformation matrix to your shape, without point of origin. Its  result is similar to *BlElementLocalTransformation*, with origin set to *BlAffineTransformationTopLeftOrigin*"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:02.061-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:02.061-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "4JGH89/eDQCt7bt0D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "- **BlElementCompositeTransformation** which are combination of *BlElementLocalTransformation* and/or *BlElementAbsoluteTransformation*"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:05.346-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:18.565-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6LG589/eDQCt9AmKD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Most of the time, you won't have to deal with matrix definition. You'll use the helper method `transformDo`, and define your transformation using *BlTransformationBuilder*."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:09.543-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:14.864-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "WMD589/eDQCt+zoTD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "When you're defining a transformation using `transformDo:` , you'll, by default, use *BlAffineCompositeTransformation*. All transformation move added subsequently will be composed together.\r\nThe origin will be set to *BlAffineTransformationCenterOrigin*."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:48:39.387-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:09.546-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "kJct8t/eDQCtsq8LD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Those two transformation below are strictly equivalent, and rotate your element by 45 degree. \r\nOne use the underlying object, while the other use the helper methods:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:10.544-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:34.263-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gAYJ9N/eDQCuAeIgD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "```smalltalk\r\nelt transformation: (BlElementLocalTransformation \r\n\tnewWith: ((BlRotationTransformation new angle: 45) \r\n\torigin: (BlAffineTransformationCenterOrigin defaultInstance ) )).\r\n```\r\n\r\n```smalltalk\r\nelt transformDo: [ :t | t rotateBy: 45 ].\r\n```\r\n\r\nA transformation is applied in the scope of the message `transformDo:` as shown below.\r\n```\r\nelement transformDo: [ :b | b scaleBy: 0.2; translateBy: -25 @ -15 ];\r\n```\r\nThe following script produces *@fig:transform@*.\r\n\r\n```smalltalk\r\naContainer := BlElement new\r\n\t\tlayout: BlFrameLayout new;\r\n\t\tconstraintsDo: [ :c |\r\n\t\t\tc horizontal fitContent.\r\n\t\t\tc vertical fitContent ];\r\n\t\tpadding: (BlInsets all: 20);\r\n\t\tbackground: (Color gray alpha: 0.2).\r\n\r\nnode := BlElement new\r\n\tgeometry: (BlRoundedRectangleGeometry cornerRadius: 4);\r\n\tborder: (BlBorder paint: Color black width: 2);\r\n\tbackground: Color white;\r\n\tconstraintsDo: [ :c |\r\n\t\tc frame horizontal alignCenter.\r\n\t\tc frame vertical alignBottom ];\r\n\tsize: 20 @ 20.\r\n\r\naContainer transformDo: [ :t |\r\n\tt\r\n\t\tscaleBy: 2.0;\r\n\t\trotateBy: 69;\r\n\t\ttranslateBy: 50 @ 50 ].\r\n\t\t\r\naContainer addChild: node.\r\naContainer forceLayout.\r\n```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:53.475-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:49:59.247-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0BWY9t/eDQCuFDFHD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "transform is something extra that is applied on top of position. For example if you want to have a short of animation, you would use transform as it is not  taken into account by layouts"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:50:21.401-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:50:21.401-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wDNC+N/eDQCuO7TpD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "### Transform catches"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:50:25.303-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:50:25.303-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "8L19+N/eDQCuQnvgD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The message `transformDo:` can be applied at any moment during the life of an object.\r\nYou can use any static or pre-computed properties with `transformDo:` as in the following snippet."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:50:16.342-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:50:25.306-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "8AX199/eDQCuMYR6D9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Here ` -25 asPoint` does not depend on the child or parent size.\r\n\r\n```\r\n| child parent |\r\nchild := BlElement new \r\n\tbackground: Color lightBlue; \r\n\tgeometry: BlCircleGeometry new;\r\n\tyourself.\r\n \r\nchild position: 100@100.\r\nchild  transformDo: [ :t | t translateBy: -25 asPoint ].\r\n\r\nparent := BlElement new \r\n\tsize: 200 asPoint; \r\n\taddChild: child;\r\n\tbackground: Color lightRed.\r\n\r\nparent openInSpace.\r\n```\r\n\r\n**Important.**\r\nif you want to use dynamic layout properties (such as `size`) with `transformDo:`, you need to wait for layout phase to be completed using `whenLayoutedDoOnce:`.\r\nCompare the two examples below:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:50:41.814-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:50:42.79-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "8LF5+d/eDQCuSAoYD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "```\r\n| child parent |\r\nchild := BlElement new \r\n\tbackground: Color lightBlue; \r\n\tgeometry: BlCircleGeometry new;\r\n\tyourself.\r\n \r\nchild position: 100@100.\r\nchild transformDo: [ :t | t translateBy: child size negated / 2 ];\r\n\r\nparent := BlElement new \r\n\tsize: 200 asPoint; \r\n\taddChild: child;\r\n\tbackground: Color lightRed.\r\n\r\nparent openInSpace.\r\n```\r\n\r\n\r\n\r\n```\r\n| child parent |\r\nchild := BlElement new \r\n\tbackground: Color lightBlue; \r\n\tgeometry: BlCircleGeometry new;\r\n\tyourself.\r\n \r\nchild position: 100@100.\r\n\r\nparent := BlElement new \r\n\tsize: 200 asPoint; \r\n\taddChild: child;\r\n\tbackground: Color lightRed.\r\n\r\nparent whenLayoutedDoOnce: [ \r\n\tchild  transformDo: [ :t | t translateBy: (child size negated / 2) ]  ].\r\n\r\nparent openInSpace.\r\n```` "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:51:01.19-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-19T15:51:12.397-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iFWh+t/eDQCuUTBkD9l5vg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Element custom painting (more here)\r\n\r\nBloc favors `BlElement` composition to create your graphical interface. Most of the time, you will not have to create a custom painting of your element widget. You can already do a lot with existing geometry.\r\n\r\nUltimately, you can define drawing methods on a canvas, but once drawn, a canvas cannot be easily inspected for its elements. However, Bloc element composition creates a tree of elements, that can be inspected, and shaped dynamically.\r\n\r\nCreating and drawing your element\r\n- subclass `BlElement`\r\n- custom drawing is done with `aeFullDrawOn:` method. Note that 'ae' stands for the Alexandrie canvas.\r\n\r\nYou can see the `aeFullDrawOn:`\r\n```\r\nBlElement >> aeFullDrawOn: aCanvas\r\n\t\"Main entry point to draw myself and my children on an Alexandrie canvas.\"\r\n\r\n\tself aeDrawInSameLayerOn: aCanvas.\r\n\tself aeCompositionLayersSortedByElevationDo: [ :each | each paintOn: aCanvas ].\r\n```\r\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-08-19T18:08:46.549-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-08-19T18:12:41.583-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "CBg0SnLcDQCH4u5sAa9K2g=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Bloc visual properties are stored in the **visuals** property of {{gtClass:BlElement}}. Default visual come from {{gtClass:BlDefaultVisuals}} and their default value are defined in {{gtMethod:name=BlElementVisuals class>>initialize|expanded}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-08-19T18:13:00.828-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-08-19T18:13:30.231-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "kA1cWXLcDQCOZh48Aa9K2g=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "For each element, custom visual properties are stored in {{gtClass:BlCustomVisuals}}"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-08-19T18:08:52.34-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-08-19T18:08:52.34-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Bloc visuals"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "b8d1334a-72dc-0d00-87e1-149b01af4ada"
	}
}